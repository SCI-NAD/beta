---
const { label, name, options, required} = Astro.props;
---

<style>
  .form-field__container select {
    width: 100%;
    padding: 0.5rem;
    border: 2px solid var(--form-field-border-color, #ccc);
    color: var(--form-field-input-color, #000000);
    border-radius: var(--form-field-border-radius, 0.25rem);
    outline-style: none;
    font-size: 1rem;
    font-family: inherit;
    /* Fixes gloss effect on select dropdowns in Safari */
    -webkit-appearance: none;
  }
  .form-field__container select:focus {
    border: 2px solid var(--form-field-border-focus-color, #000);
  }
</style>

<div class="form-field__container">
  {label && <label for={name}>{label}</label>}
  <select name={name} required={required}>
    <option disabled selected value="">==SELECT AN OPTION==</option>
    {options?.map((option) => (
          <option value={option}>{option}</option>
        ))}
  </select>
</div>

<!-- This component creates a reusable form select field.
It does the following:
1. Accepts props for label, name, options, and required status.
2. Applies consistent styling to the select element, including width, padding, border, color, and font properties.
3. Removes the default gloss effect on select dropdowns in Safari.
4. Renders a label if one is provided.
5. Creates a select element with the given name and required status.
6. Adds a default disabled option as the initial selection.
7. Maps through the provided options array to create option elements.
8. Allows for easy integration and reuse in various forms throughout the application. -->
